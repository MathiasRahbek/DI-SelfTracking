{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport graph from \"../assets/pictures/graph.jpg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Stats(_ref) {\n  var navigation = _ref.navigation;\n  var chartConfig = {\n    backgroundGradientFrom: \"#1E2923\",\n    backgroundGradientFromOpacity: 0,\n    backgroundGradientTo: \"#08130D\",\n    backgroundGradientToOpacity: 0.5,\n    color: function color() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return \"rgba(26, 255, 146, \" + opacity + \")\";\n    },\n    strokeWidth: 2,\n    barPercentage: 0.5,\n    useShadowColorFromDataset: false\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.typeSection,\n      children: [_jsx(Text, {\n        style: styles.header,\n        children: \"Data type\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"column\",\n          alignItems: \"flex-start\"\n        },\n        children: [_jsxs(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Text, {\n            style: [styles.fontNormal, {\n              color: \"red\"\n            }],\n            children: \"\\u23AF\"\n          }), _jsx(Text, {\n            style: styles.fontNormal,\n            children: \"Health\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Text, {\n            style: [styles.fontNormal, {\n              color: \"green\"\n            }],\n            children: \"\\u23AF\"\n          }), _jsx(Text, {\n            style: styles.fontNormal,\n            children: \"Politics\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Text, {\n            style: [styles.fontNormal, {\n              color: \"purple\"\n            }],\n            children: \"\\u23AF\"\n          }), _jsx(Text, {\n            style: styles.fontNormal,\n            children: \"Work\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Text, {\n            style: [styles.fontNormal, {\n              color: \"pink\"\n            }],\n            children: \"\\u23AF\"\n          }), _jsx(Text, {\n            style: styles.fontNormal,\n            children: \"Relationships\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Text, {\n            style: [styles.fontNormal, {\n              color: \"lightblue\"\n            }],\n            children: \"\\u23AF\"\n          }), _jsx(Text, {\n            style: styles.fontNormal,\n            children: \"Religion\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Text, {\n            style: [styles.fontNormal, {\n              color: \"black\"\n            }],\n            children: \"\\u22EF\"\n          }), _jsx(Text, {\n            style: styles.fontNormal,\n            children: \"Average of all\"\n          })]\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.graphSection,\n      children: _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Bezier Line Chart\"\n        }), _jsx(LineChart, {\n          data: {\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n            datasets: [{\n              dataHealth: [200, 10, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100]\n            }]\n          },\n          width: Dimensions.get(\"window\").width,\n          height: 220,\n          yAxisLabel: \"$\",\n          yAxisSuffix: \"k\",\n          yAxisInterval: 1,\n          chartConfig: {\n            backgroundColor: \"#e26a00\",\n            backgroundGradientFrom: \"#fb8c00\",\n            backgroundGradientTo: \"#ffa726\",\n            decimalPlaces: 2,\n            color: function color() {\n              var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n              return \"rgba(255, 255, 255, \" + opacity + \")\";\n            },\n            labelColor: function labelColor() {\n              var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n              return \"rgba(255, 255, 255, \" + opacity + \")\";\n            },\n            style: {\n              borderRadius: 16\n            },\n            propsForDots: {\n              r: \"6\",\n              strokeWidth: \"2\",\n              stroke: \"#ffa726\"\n            }\n          },\n          bezier: true,\n          style: {\n            marginVertical: 8,\n            borderRadius: 16\n          }\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    backgroundColor: \"#FFFFFF\",\n    width: \"100%\",\n    height: \"100%\",\n    padding: 30\n  },\n  typeSection: {\n    flex: 4,\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#EFF5FD\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    borderRadius: 15,\n    padding: 20\n  },\n  header: {\n    fontWeight: \"bold\",\n    fontSize: 30,\n    marginBottom: 50\n  },\n  fontNormal: {\n    fontSize: 22,\n    fontWeight: \"bold\",\n    margin: 10\n  },\n  graphSection: {\n    flex: 10,\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#EFF5FD\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    padding: 20,\n    borderRadius: 15,\n    marginLeft: 30\n  },\n  graphImg: {\n    resizeMode: \"contain\",\n    width: \"100%\",\n    height: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/rahbeksmacbookpro/VSC Projects/DI-SelfTracking/screens/Stats.js"],"names":["LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","graph","Stats","navigation","chartConfig","backgroundGradientFrom","backgroundGradientFromOpacity","backgroundGradientTo","backgroundGradientToOpacity","color","opacity","strokeWidth","barPercentage","useShadowColorFromDataset","styles","container","typeSection","header","flexDirection","alignItems","fontNormal","graphSection","labels","datasets","dataHealth","Math","random","Dimensions","get","width","backgroundColor","decimalPlaces","labelColor","style","borderRadius","propsForDots","r","stroke","marginVertical","StyleSheet","create","justifyContent","height","padding","flex","fontWeight","fontSize","marginBottom","margin","marginLeft","graphImg","resizeMode"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Image, Dimensions } from \"react-native\";\n\nimport {\n  LineChart,\n  BarChart,\n  PieChart,\n  ProgressChart,\n  ContributionGraph,\n  StackedBarChart,\n} from \"react-native-chart-kit\";\n\nimport graph from \"../assets/pictures/graph.jpg\";\n\nexport default function Stats({ navigation }) {\n  const chartConfig = {\n    backgroundGradientFrom: \"#1E2923\",\n    backgroundGradientFromOpacity: 0,\n    backgroundGradientTo: \"#08130D\",\n    backgroundGradientToOpacity: 0.5,\n    color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`,\n    strokeWidth: 2, // optional, default 3\n    barPercentage: 0.5,\n    useShadowColorFromDataset: false, // optional\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.typeSection}>\n        <Text style={styles.header}>Data type</Text>\n        {/* Health */}\n        <View style={{ flexDirection: \"column\", alignItems: \"flex-start\" }}>\n          <View style={{ flexDirection: \"row\" }}>\n            <Text style={[styles.fontNormal, { color: \"red\" }]}>⎯</Text>\n            <Text style={styles.fontNormal}>Health</Text>\n          </View>\n          {/* Politics */}\n          <View style={{ flexDirection: \"row\" }}>\n            <Text style={[styles.fontNormal, { color: \"green\" }]}>⎯</Text>\n            <Text style={styles.fontNormal}>Politics</Text>\n          </View>\n          {/* Work */}\n          <View style={{ flexDirection: \"row\" }}>\n            <Text style={[styles.fontNormal, { color: \"purple\" }]}>⎯</Text>\n            <Text style={styles.fontNormal}>Work</Text>\n          </View>\n          {/* Relationships */}\n          <View style={{ flexDirection: \"row\" }}>\n            <Text style={[styles.fontNormal, { color: \"pink\" }]}>⎯</Text>\n            <Text style={styles.fontNormal}>Relationships</Text>\n          </View>\n          {/* Religion */}\n          <View style={{ flexDirection: \"row\" }}>\n            <Text style={[styles.fontNormal, { color: \"lightblue\" }]}>⎯</Text>\n            <Text style={styles.fontNormal}>Religion</Text>\n          </View>\n          {/* Average of all */}\n          <View style={{ flexDirection: \"row\" }}>\n            <Text style={[styles.fontNormal, { color: \"black\" }]}>⋯</Text>\n            <Text style={styles.fontNormal}>Average of all</Text>\n          </View>\n        </View>\n      </View>\n      <View style={styles.graphSection}>\n        {/* <Image style={styles.graphImg} source={graph} /> */}\n        <View>\n          <Text>Bezier Line Chart</Text>\n          <LineChart\n            data={{\n              labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n              datasets: [\n                {\n                  dataHealth: [\n                    200,\n                    10,\n                    Math.random() * 100,\n                    Math.random() * 100,\n                    Math.random() * 100,\n                    Math.random() * 100,\n                  ],\n                },\n              ],\n            }}\n            width={Dimensions.get(\"window\").width} // from react-native\n            height={220}\n            yAxisLabel=\"$\"\n            yAxisSuffix=\"k\"\n            yAxisInterval={1} // optional, defaults to 1\n            chartConfig={{\n              backgroundColor: \"#e26a00\",\n              backgroundGradientFrom: \"#fb8c00\",\n              backgroundGradientTo: \"#ffa726\",\n              decimalPlaces: 2, // optional, defaults to 2dp\n              color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n              labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n              style: {\n                borderRadius: 16,\n              },\n              propsForDots: {\n                r: \"6\",\n                strokeWidth: \"2\",\n                stroke: \"#ffa726\",\n              },\n            }}\n            bezier\n            style={{\n              marginVertical: 8,\n              borderRadius: 16,\n            }}\n          />\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    backgroundColor: \"#FFFFFF\",\n    width: \"100%\",\n    height: \"100%\",\n    padding: 30,\n  },\n\n  //Datetype section\n  typeSection: {\n    flex: 4,\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#EFF5FD\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    borderRadius: 15,\n    padding: 20,\n  },\n\n  header: {\n    fontWeight: \"bold\",\n    fontSize: 30,\n    marginBottom: 50,\n  },\n\n  fontNormal: {\n    fontSize: 22,\n    fontWeight: \"bold\",\n    margin: 10,\n  },\n\n  //Graph section\n  graphSection: {\n    flex: 10,\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#EFF5FD\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    padding: 20,\n    borderRadius: 15,\n    marginLeft: 30,\n  },\n\n  graphImg: {\n    resizeMode: \"contain\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}