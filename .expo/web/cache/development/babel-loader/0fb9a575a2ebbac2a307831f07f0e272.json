{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { createContext, useEffect, useState } from \"react\";\nimport Profile from \"./screens/Profile\";\nimport Market from \"./screens/Market\";\nimport Stats from \"./screens/Stats\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport var DataContext = createContext();\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      TextCon1 = _useState2[0],\n      setTextCon1 = _useState2[1];\n\n  var addText1 = function addText1(newText1) {\n    setTextCon1(function (prevTexts1) {\n      return [newText1].concat(_toConsumableArray(prevTexts1));\n    });\n  };\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      TextCon2 = _useState4[0],\n      setTextCon2 = _useState4[1];\n\n  var addText2 = function addText2(newText2) {\n    setTextCon2(function (prevTexts2) {\n      return [newText2].concat(_toConsumableArray(prevTexts2));\n    });\n  };\n\n  return _jsx(DataContext.Provider, {\n    value: {\n      DataList1: TextCon1,\n      addFunction1: addText1,\n      DataList2: TextCon2,\n      addFunction2: addText2\n    },\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        initialRout: \"Profile\",\n        screenOptions: {\n          headerTintColor: \"white\",\n          headerStyle: {\n            backgroundColor: \"#3B5B81\"\n          }\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Profile\",\n          component: Profile,\n          options: {\n            headerTitleAlign: \"center\",\n            headerTitle: function headerTitle(props) {\n              return _jsx(ProfilePicture, _objectSpread({}, props));\n            },\n            headerShown: true\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Market\",\n          component: Market,\n          options: {\n            headerTitleAlign: \"center\",\n            headerTitle: function headerTitle(props) {\n              return _jsx(MarketPicture, _objectSpread({}, props));\n            },\n            headerShown: true\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Stats\",\n          component: Stats,\n          options: {\n            headerTitleAlign: \"center\",\n            headerTitle: function headerTitle(props) {\n              return _jsx(StatsPicture, _objectSpread({}, props));\n            },\n            headerShown: true\n          }\n        })]\n      })\n    })\n  });\n}\n\nfunction ProfilePicture() {\n  return _jsx(Image, {\n    style: {\n      width: 250,\n      height: 33,\n      marginBottom: 20,\n      marginTop: 20\n    },\n    source: require(\"./assets/pictures/dataestate.jpg\"),\n    resizeMode: \"contain\"\n  });\n}\n\nfunction MarketPicture() {\n  return _jsx(Image, {\n    style: {\n      width: 250,\n      height: 33,\n      marginBottom: 20,\n      marginTop: 20\n    },\n    source: require(\"./assets/pictures/market.jpg\"),\n    resizeMode: \"contain\"\n  });\n}\n\nfunction StatsPicture() {\n  return _jsx(Image, {\n    style: {\n      width: 250,\n      height: 33,\n      marginBottom: 20,\n      marginTop: 20\n    },\n    source: require(\"./assets/pictures/datavalue.jpg\"),\n    resizeMode: \"contain\"\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/rahbeksmacbookpro/VSC Projects/DI-SelfTracking/App.js"],"names":["StatusBar","createContext","useEffect","useState","Profile","Market","Stats","NavigationContainer","createNativeStackNavigator","Stack","DataContext","App","TextCon1","setTextCon1","addText1","newText1","prevTexts1","TextCon2","setTextCon2","addText2","newText2","prevTexts2","DataList1","addFunction1","DataList2","addFunction2","headerTintColor","headerStyle","backgroundColor","headerTitleAlign","headerTitle","props","headerShown","ProfilePicture","width","height","marginBottom","marginTop","require","MarketPicture","StatsPicture","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View, Image } from \"react-native\";\nimport { createContext, useEffect, useState } from \"react\";\n\nimport Profile from \"./screens/Profile\";\nimport Market from \"./screens/Market\";\nimport Stats from \"./screens/Stats\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nconst Stack = createNativeStackNavigator();\n\nexport const DataContext = createContext();\n\nexport default function App() {\n  const [TextCon1, setTextCon1] = useState([]);\n\n  const addText1 = (newText1) => {\n    setTextCon1((prevTexts1) => [newText1, ...prevTexts1]);\n  };\n\n  const [TextCon2, setTextCon2] = useState([]);\n\n  const addText2 = (newText2) => {\n    setTextCon2((prevTexts2) => [newText2, ...prevTexts2]);\n  };\n\n  return (\n    <DataContext.Provider\n      value={{\n        DataList1: TextCon1,\n        addFunction1: addText1,\n        DataList2: TextCon2,\n        addFunction2: addText2,\n      }}\n    >\n      <NavigationContainer>\n        <Stack.Navigator\n          initialRout=\"Profile\"\n          screenOptions={{\n            headerTintColor: \"white\",\n            headerStyle: {\n              backgroundColor: \"#3B5B81\",\n            },\n          }}\n        >\n          <Stack.Screen\n            name=\"Profile\" // Name for the page, used to reference it when navigating.\n            component={Profile} // Which Component should be rendered when the page is shown?\n            options={{\n              headerTitleAlign: \"center\",\n              headerTitle: (props) => <ProfilePicture {...props} />,\n              headerShown: true,\n            }}\n          />\n          <Stack.Screen\n            name=\"Market\"\n            component={Market}\n            options={{\n              headerTitleAlign: \"center\",\n              headerTitle: (props) => <MarketPicture {...props} />,\n              headerShown: true,\n            }}\n          />\n          <Stack.Screen\n            name=\"Stats\"\n            component={Stats}\n            options={{\n              headerTitleAlign: \"center\",\n              headerTitle: (props) => <StatsPicture {...props} />,\n              headerShown: true,\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </DataContext.Provider>\n  );\n}\n\nfunction ProfilePicture() {\n  return (\n    <Image\n      style={{ width: 250, height: 33, marginBottom: 20, marginTop: 20 }}\n      source={require(\"./assets/pictures/dataestate.jpg\")}\n      resizeMode=\"contain\"\n    />\n  );\n}\n\nfunction MarketPicture() {\n  return (\n    <Image\n      style={{ width: 250, height: 33, marginBottom: 20, marginTop: 20 }}\n      source={require(\"./assets/pictures/market.jpg\")}\n      resizeMode=\"contain\"\n    />\n  );\n}\n\nfunction StatsPicture() {\n  return (\n    <Image\n      style={{ width: 250, height: 33, marginBottom: 20, marginTop: 20 }}\n      source={require(\"./assets/pictures/datavalue.jpg\")}\n      resizeMode=\"contain\"\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}